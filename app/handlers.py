from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext          #–¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ —é–∑–µ—Ä–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

import app.keyboards as kb  #–∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
import app.database_work as dbw

router = Router()           #–≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–æ–ª—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞

#–∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
class Reg(StatesGroup):
    reason_text = State()
    #number = State()

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command('start'))                 
async def cmd_start(message: Message):
    await message.answer('–≠—Ç–æ –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ —É—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω. –Ø –±—É–¥—É –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –æ—Ç–º–µ—Ç–∫–∏ –æ –≤–∞—à–µ–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–∏ –≤ –∂—É—Ä–Ω–∞–ª.')
    db = dbw.DBWork() # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ë–î
    user_check = await db.find_user(message.from_user.id)
    if(user_check==False):
        await message.answer('–ú—ã —Å –í–∞–º–∏ –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º—ã, –Ω–æ —Ç–∞–∫ –∫–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±—ã–ª–æ –ª–µ–Ω—å –ø–∏—Å–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –∑–∞–ø—Ä–æ—Å–∞ –∏–º–µ–Ω–∏, —Ç–æ –ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üòÅ', reply_markup=kb.main)
    else:
        await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_check}, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.', reply_markup=kb.main)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–º–µ—Ç–∫—É
@router.message(F.text == '–ü–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–º–µ—Ç–∫—É')
async def check_in(message: Message):
    user_first_name = message.from_user.first_name
    await message.answer(f'{user_first_name}, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!')
    await message.answer('–í—ã —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Ä–∞–±–æ—Ç–µ?', reply_markup=kb.check_in_btn)  
    
    
#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –î–ê
@router.callback_query(F.data == 'yes')                 
async def check_in_yes(callback: CallbackQuery):
    await callback.answer()
    db = dbw.DBWork()  # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ë–î
    db.logbook_add(callback.message.from_user.id,1)
    await callback.message.answer('–†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–∏ —è –∑–∞–ø–∏—Å–∞–ª –≤ –∂—É—Ä–Ω–∞–ª.')
    await callback.message.answer('–•–æ—Ä–æ—à–µ–π –≤–∞–º —Å–º–µ–Ω—ã!')

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ù–ï–¢
@router.callback_query(F.data == 'no')                    
async def check_in_no(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(Reg.reason_text)                         ##–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ç–æ—Å—Ç—è–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ —Ç–µ–∫—Å—Ç–∞
    await callback.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ—á–µ–º—É —Å–µ–≥–æ–¥–Ω—è –Ω–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏?')

#–ª–æ–≤–∏–º —Ç–µ–∫—Å—Ç –ø—Ä–∏—á–∏–Ω—ã
@router.message(Reg.reason_text)
async def reg_two(message: Message, state: FSMContext):
    await state.update_data(reason_text=message.text)              #–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø–∏—Å–∏ —Ç–µ–∫—Å—Ç–∞
    data = await state.get_data()                                  #—Å–æ–∑—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    user_id = message.from_user.id
    user_full_name = message.from_user.full_name
    await message.answer('–ú–Ω–µ –∂–∞–ª—å, —á—Ç–æ –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É. –ë—É–¥—É –∂–¥–∞—Ç—å –≤–∞—à–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è!')
    await message.answer('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —è –ø–µ—Ä–µ–¥–∞–ª.')
    await message.answer(f'–ò–º—è: {user_full_name}\nuser_ID:{user_id}\n–ü—Ä–∏—á–∏–Ω–∞: {data["reason_text"]}')
    await state.clear()







#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–±—â –∏ –æ—Ç–≤–µ—Ç
@router.message(F.text)          
async def reason(message: Message):
    reason_text = message.text
    db = dbw.DBWork()  # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ë–î
    db.logbook_add(message.from_user.id,0, reason_text)
    await message.answer('–ú–Ω–µ –∂–∞–ª—å, —á—Ç–æ –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É. –ë—É–¥—É –∂–¥–∞—Ç—å –≤–∞—à–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è!')
    await message.answer('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —è –ø–µ—Ä–µ–¥–∞–ª.')
    

    

